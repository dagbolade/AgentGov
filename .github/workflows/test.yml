name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.5'

    - name: Verify go.mod
      run: |
        if [ ! -f go.mod ]; then
          echo "go.mod not found!"
          exit 1
        fi
        cat go.mod

    - name: Tidy dependencies
      run: go mod tidy

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Check test coverage
      run: |
        total_coverage=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
        echo "Total test coverage: ${total_coverage}%"
        if (( $(echo "$total_coverage < 70" | bc -l) )); then
          echo "Warning: Test coverage is below 70%"
        fi

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.5'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build Binary
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.5'

    - name: Build
      run: go build -v -o governance-sidecar ./cmd/sidecar

    - name: Test binary
      run: |
        if [ -f governance-sidecar ]; then
          echo "Binary built successfully"
          ls -lh governance-sidecar
        else
          echo "Binary not found!"
          exit 1
        fi