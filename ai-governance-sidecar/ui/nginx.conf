map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

map $arg_token $ws_auth_header {
  default "";
  ""      "";
  ~.+     "Bearer $arg_token";
}

server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ---------- API & WebSocket (frontend uses /api/...) ----------
    location /api/ {
        proxy_pass http://governance-sidecar:8080;
        rewrite ^/api/(.*)$ /$1 break;
        proxy_http_version 1.1;
        # keep clientâ€™s Authorization header
        proxy_set_header Authorization $http_authorization;
        # Upgraded for WebSockets (covers /api/ws)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Long timeouts for WS / SSE / long polls
        proxy_read_timeout 1h;
        proxy_send_timeout 1h;
    }

    # Back-compat for current frontend posting to /login and calling /me
    location = /login {
        proxy_pass http://ai-governance-sidecar:8080/auth/login;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /me {
        proxy_pass http://ai-governance-sidecar:8080/auth/me;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Existing API endpoints
    location /approvals {
        proxy_pass http://ai-governance-sidecar:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /audit {
        proxy_pass http://ai-governance-sidecar:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health {
        proxy_pass http://ai-governance-sidecar:8080/healthz;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # WebSocket proxy (no 'map' needed)
    location ^~ /api/ws {
        proxy_pass http://ai-governance-sidecar:8080/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # only here do we synthesize Authorization from the query token
        proxy_set_header Authorization $ws_auth_header;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # Static + SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
